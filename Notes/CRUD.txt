CRUD: Create-Read-Update-Delete
- етапи життєвого циклу інформації
- необхідні (і достатні) операції з даними
- вимога (CRUD-повнота) до системи - реалізувати ці операції для всіх груп даних

Завдання - створити вікно-шаблон CrudDepartmentWindow для CRUD роботи з відділами:

      РЕДАГУЄМО ВІДДІЛ

   Номер: <D3C376E4-BCE3-4D85-ABA4-E3CF49612C94>   не можна редагувати
   Назва: <IT відділ>                              можна редагувати

 [Save]     [Delete]     [Cancel]

-------------------------------------------------------------------------------
Виконання запитів
варіант 1 (НЕ РЕКОМЕНДУЄТЬСЯ): параметри у тексті запиту
String sql = "INSERT INTO Products(Id, Name, Price) VALUES" +
    $"('{dialog.EditedProduct.Id}', N'{dialog.EditedProduct.Name}', {dialog.EditedProduct.Price})";

Загальна проблема: змішування коду та даних
- Price(дробове число): через локалізацію подається з комою у якості роздільника
    розрядів, а SQL сприймає кому як розділення параметрів
- Name(рядок): потенційно небезпечні символи, що порушать синтаксис команди
   Name="П'єзодатчик" --> , N'П'єзодатчик' --> Error
   Спецсимволи мають бути екранованими (escaped), але у різних діалектах SQL
   це різні підходи (\' або '')
- Id: потенційно може мати значення за замовчуванням '000000-00....'

Загальне вирішення: розділяти код і дані - використовувати 
варіант 2: підготовлені/параметризовані запити
String sql = "INSERT INTO Products(Id, Name, Price) VALUES(@id, @name, @price)";
using SqlCommand cmd = new(sql, _connection);
cmd.Parameters.AddWithValue("@id", dialog.EditedProduct.Id);
cmd.Parameters.AddWithValue("@name", dialog.EditedProduct.Name);
cmd.Parameters.AddWithValue("@price", dialog.EditedProduct.Price);
try
{
    cmd.ExecuteNonQuery();.....

-------------------------------------------------------------------------------
Видалення даних
Загальна рекомендація - НЕ видаляти дані, а "помічати" їх видаленими
Якщо дані видаляються, то
 - можуть порушуватись зовнішні ключі
 - можуть початись каскадні видалення зв'язаних даних
 - зникають дані, потрібні для розрахунків (наприклад, ціни товарів у чеку)
 - зникає можливість відновити дані
Варіанти вирішення:
 - вводиться таблиця-журнал із історією видалень/відновлень
 - додається колонка до кожної з таблиць
   = логічна (так/ні)
   = дата-час видалення
   = текст - причина видалення
   = ід користувача, хто видалив
